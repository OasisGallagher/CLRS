/*
 平均结束时间最小也就是使总的结束时间最小.
 (a)
 按照p递增的顺序排列任务, 并按照此顺序执行任务.
 该问题具有最优子结构, 及选定任务ai, 必然有i之后的所有任务的总结束时间最小.
 如果存在两个相邻的任务, a[i], 持续时间大于a[j], 那么, 交换二者, a[j]的结
 束时间减少了p[i], ai的结束时间增加了p[j], 总的结束时间减少了p[i]-p[j].
 (b)
 原文:
 Suppose now that the tasks are not all available at once. That is,
 each task has a release time ri before which it is not available to be
 processed.
 release time想必是这个任务的发布时间(并不是"松弛时间"), 到了时间r[i],
 i任务才可以被执行.
 采用扫描线的方式, 迭代时间.
 设初始的任务为一个虚拟任务, 它的p值为INF.
 如果遇到一个任务i的发布时间小于当前的任务, 那么, 选择这个任务.
 如果该任务结束, 那么继续上一个任务, 因为它必然是当前所有发布的任务中, p值
 最短的任务.
 直到所有任务完成而结束.
 这样做的原因是因为, 在任意一个时间点(一个新任务发布或者一个任务完成), 都
 满足问题(a)中的贪心性质.
 时间代价为O(n*T).n为任务数. T为总的任务需要的时间.
 */
