/*
 对于无向图中的边(u, v), 被归为分类表中的第1种类型.
 即, 如果发现(u,v)时, 为树边; 发现(v, u)时反向边, 那么边(u,v)被当做树边,
 因为在边的索引表中, 树边优先于反向边.
 树边 -> 反向边 -> 正向边 -> 交叉边
 如果在dfs中, 按照(u,v)和(v,u)哪个先被遇到作为标准来将(u,v)归类为树边或者
 反向边的话, 与按照边的分类的优先级分类不符, 也就是说, 由于无向图中只存在
 树边和反向边, 为了造成这种不符, 只有当发现(u,v)时, 为反向边; 而后发现(v,u)
 作为正向边.
 如果发现(u,v)时为反向边, 那么此时u和v都为灰色, 当发现(v,u)时, 就一定不可
 能是正向边, 因为u已经是灰色, 不可能被着为白色.
 因此, 在dfs中, 按照(u,v)和(v,u)哪个先被遇到作为标准来将(u,v)归类为树边或者
 反向边的话, 与按照边的分类的优先级分类相符.
 */

