/*
 a)
 1)
 在无向图中从u开始进行bfs, 会先访问u的所有邻接节点, 令它们全部为
 灰色, 因此, 不可能有回路可以再经过u的邻接节点再访问u, 也就不可能存在反向
 边.
 而且, 在无论有向还是无向图G中, 如果存在(u, v), 是该图的一条正向边,
 那么, 该边一定是在遍历u时, 被发现, 且访问u的邻接点时, 需要两次访问到v.
 这显然是不可能的.
 所以在无向图中, 通过bfs访问图, 图中不可能存在正/反向边.
 在有向图中, 通过bfs访问图, 图中不可能存在正向边.
 2)
 由bfs程序可知, d[v] = d[u] + 1.
 3)
 从u开始访问无向图G, 如果u的邻接表包含点, w, v, 那么, d[w] = d[v] = 1.
 如果(w,v)存在, 那么, (w,v)为交叉边, 满足d[w] = d[v].
 如果w和v不都是u的邻接节点, 如果存在(w,v)是交叉边, 那么, 在w处访问v时, v
 一定是d值比d[w]大1的节点.
 因为bfs是先访问完所有距离u为k的节点, 再访问距离为k+1的节点.
 b)
 1)见 a)1).
 2)
 由bfs程序可知, d[v] = d[u] + 1.
 3)
 For any edge (u, v), whether or not it's a cross edge, we cannot have
 d[v] > d[u] + 1, since we visit v at the latest when we explore edge 
 (u, v).
 Thus, d[v] ≤ d[u] + 1.
 4)
 对于反向边(u,v), 一定有d[u] > d[v], 由于反向边的定义, 决定了二者的发现顺序.
 而d[u] = d[v],表示u=v, 即u存在自环.
 */
